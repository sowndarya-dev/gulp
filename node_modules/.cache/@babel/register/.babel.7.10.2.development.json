{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"filename\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//Initialize Modules\nconst {\n  src,\n  dest,\n  watch,\n  series,\n  parallel\n} = require('gulp');\n\nconst autoprefixer = require('autoprefixer');\n\nconst cssnano = require('cssnano');\n\nconst concat = require('gulp-concat');\n\nconst postcss = require('gulp-postcss');\n\nconst replace = require('gulp-replace');\n\nconst sass = require('gulp-sass');\n\nconst sourcemaps = require('gulp-sourcemaps');\n\nconst uglify = require('gulp-uglify');\n\nconst babel = require('gulp-babel');\n\nconst browserify = require('gulp-browserify'); //File path variables\n\n\nconst files = {\n  scssPath: 'app/scss/**/*.scss',\n  jsPath: 'app/js/**/*.js'\n}; //Sass tasks\n\nfunction sassTask() {\n  return src(files.scssPath).pipe(sourcemaps.init()).pipe(sass()).pipe(postcss([autoprefixer(), cssnano()])).pipe(sourcemaps.write('.')).pipe(dest('dist'));\n} //JS tasks\n\n\nfunction jsTask() {\n  return src(files.jsPath).pipe(sourcemaps.init()).pipe(browserify({\n    insertGlobals: true\n  })).pipe(babel({\n    presets: ['@babel/env']\n  })).pipe(concat('all.js')).pipe(sourcemaps.write('.')) // .pipe(uglify())\n  .pipe(dest('dist'));\n} //Cachebursting\n\n\nconst cbstring = new Date().getTime();\n\nfunction cacheBustTask() {\n  return src(['index.html']).pipe(replace(/cb=\\d+/g, 'cb=' + cbstring)).pipe(dest('.'));\n} //watch tasks\n\n\nfunction watchTask() {\n  watch([files.scssPath, files.jsPath], parallel(sassTask, jsTask));\n} //Default task\n\n\nexports.default = series(parallel(sassTask, jsTask), cacheBustTask, watchTask);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNyYyIsImRlc3QiLCJ3YXRjaCIsInNlcmllcyIsInBhcmFsbGVsIiwicmVxdWlyZSIsImF1dG9wcmVmaXhlciIsImNzc25hbm8iLCJjb25jYXQiLCJwb3N0Y3NzIiwicmVwbGFjZSIsInNhc3MiLCJzb3VyY2VtYXBzIiwidWdsaWZ5IiwiYmFiZWwiLCJicm93c2VyaWZ5IiwiZmlsZXMiLCJzY3NzUGF0aCIsImpzUGF0aCIsInNhc3NUYXNrIiwicGlwZSIsImluaXQiLCJ3cml0ZSIsImpzVGFzayIsImluc2VydEdsb2JhbHMiLCJwcmVzZXRzIiwiY2JzdHJpbmciLCJEYXRlIiwiZ2V0VGltZSIsImNhY2hlQnVzdFRhc2siLCJ3YXRjaFRhc2siLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLE1BQU07QUFBRUEsRUFBQUEsR0FBRjtBQUFNQyxFQUFBQSxJQUFOO0FBQVdDLEVBQUFBLEtBQVg7QUFBaUJDLEVBQUFBLE1BQWpCO0FBQXdCQyxFQUFBQTtBQUF4QixJQUFrQ0MsT0FBTyxDQUFDLE1BQUQsQ0FBL0M7O0FBQ0EsTUFBTUMsWUFBWSxHQUFFRCxPQUFPLENBQUMsY0FBRCxDQUEzQjs7QUFDQSxNQUFNRSxPQUFPLEdBQUVGLE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLE1BQU1HLE1BQU0sR0FBRUgsT0FBTyxDQUFDLGFBQUQsQ0FBckI7O0FBQ0EsTUFBTUksT0FBTyxHQUFFSixPQUFPLENBQUMsY0FBRCxDQUF0Qjs7QUFDQSxNQUFNSyxPQUFPLEdBQUVMLE9BQU8sQ0FBQyxjQUFELENBQXRCOztBQUNBLE1BQU1NLElBQUksR0FBRU4sT0FBTyxDQUFDLFdBQUQsQ0FBbkI7O0FBQ0EsTUFBTU8sVUFBVSxHQUFFUCxPQUFPLENBQUMsaUJBQUQsQ0FBekI7O0FBQ0EsTUFBTVEsTUFBTSxHQUFFUixPQUFPLENBQUMsYUFBRCxDQUFyQjs7QUFDQSxNQUFNUyxLQUFLLEdBQUdULE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUNBLE1BQU1VLFVBQVUsR0FBR1YsT0FBTyxDQUFDLGlCQUFELENBQTFCLEMsQ0FDQTs7O0FBQ0EsTUFBTVcsS0FBSyxHQUFDO0FBQ1JDLEVBQUFBLFFBQVEsRUFBQyxvQkFERDtBQUVSQyxFQUFBQSxNQUFNLEVBQUM7QUFGQyxDQUFaLEMsQ0FLQTs7QUFDQSxTQUFTQyxRQUFULEdBQW1CO0FBQ2YsU0FBT25CLEdBQUcsQ0FBQ2dCLEtBQUssQ0FBQ0MsUUFBUCxDQUFILENBQ05HLElBRE0sQ0FDRFIsVUFBVSxDQUFDUyxJQUFYLEVBREMsRUFFTkQsSUFGTSxDQUVEVCxJQUFJLEVBRkgsRUFHTlMsSUFITSxDQUdEWCxPQUFPLENBQUMsQ0FBQ0gsWUFBWSxFQUFiLEVBQWdCQyxPQUFPLEVBQXZCLENBQUQsQ0FITixFQUlOYSxJQUpNLENBSURSLFVBQVUsQ0FBQ1UsS0FBWCxDQUFpQixHQUFqQixDQUpDLEVBS05GLElBTE0sQ0FLRG5CLElBQUksQ0FBQyxNQUFELENBTEgsQ0FBUDtBQU1ILEMsQ0FFRDs7O0FBQ0EsU0FBU3NCLE1BQVQsR0FBaUI7QUFDYixTQUFPdkIsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDRSxNQUFQLENBQUgsQ0FDTkUsSUFETSxDQUNEUixVQUFVLENBQUNTLElBQVgsRUFEQyxFQUVORCxJQUZNLENBRURMLFVBQVUsQ0FBQztBQUFFUyxJQUFBQSxhQUFhLEVBQUc7QUFBbEIsR0FBRCxDQUZULEVBR05KLElBSE0sQ0FHRE4sS0FBSyxDQUFDO0FBQ1JXLElBQUFBLE9BQU8sRUFBRSxDQUFDLFlBQUQ7QUFERCxHQUFELENBSEosRUFNTkwsSUFOTSxDQU1EWixNQUFNLENBQUMsUUFBRCxDQU5MLEVBT05ZLElBUE0sQ0FPRFIsVUFBVSxDQUFDVSxLQUFYLENBQWlCLEdBQWpCLENBUEMsRUFRUjtBQVJRLEdBU05GLElBVE0sQ0FTRG5CLElBQUksQ0FBQyxNQUFELENBVEgsQ0FBUDtBQVVILEMsQ0FFRDs7O0FBQ0EsTUFBTXlCLFFBQVEsR0FBQyxJQUFJQyxJQUFKLEdBQVdDLE9BQVgsRUFBZjs7QUFDQSxTQUFTQyxhQUFULEdBQXdCO0FBQ3BCLFNBQU83QixHQUFHLENBQUMsQ0FBQyxZQUFELENBQUQsQ0FBSCxDQUNOb0IsSUFETSxDQUNEVixPQUFPLENBQUMsU0FBRCxFQUFXLFFBQU9nQixRQUFsQixDQUROLEVBRU5OLElBRk0sQ0FFRG5CLElBQUksQ0FBQyxHQUFELENBRkgsQ0FBUDtBQUdILEMsQ0FHRDs7O0FBQ0EsU0FBUzZCLFNBQVQsR0FBb0I7QUFDaEI1QixFQUFBQSxLQUFLLENBQUMsQ0FBQ2MsS0FBSyxDQUFDQyxRQUFQLEVBQWdCRCxLQUFLLENBQUNFLE1BQXRCLENBQUQsRUFDRGQsUUFBUSxDQUFDZSxRQUFELEVBQVVJLE1BQVYsQ0FEUCxDQUFMO0FBRUgsQyxDQUVEOzs7QUFDQVEsT0FBTyxDQUFDQyxPQUFSLEdBQWdCN0IsTUFBTSxDQUFDQyxRQUFRLENBQUNlLFFBQUQsRUFBVUksTUFBVixDQUFULEVBQTJCTSxhQUEzQixFQUF5Q0MsU0FBekMsQ0FBdEIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxWaW5vZFxcd2VicGFja1xcZ3VscGFwcFxcIiwic291cmNlc0NvbnRlbnQiOlsiLy9Jbml0aWFsaXplIE1vZHVsZXNcclxuY29uc3QgeyBzcmMsZGVzdCx3YXRjaCxzZXJpZXMscGFyYWxsZWx9PXJlcXVpcmUoJ2d1bHAnKTtcclxuY29uc3QgYXV0b3ByZWZpeGVyPSByZXF1aXJlKCdhdXRvcHJlZml4ZXInKTtcclxuY29uc3QgY3NzbmFubz0gcmVxdWlyZSgnY3NzbmFubycpO1xyXG5jb25zdCBjb25jYXQ9IHJlcXVpcmUoJ2d1bHAtY29uY2F0Jyk7XHJcbmNvbnN0IHBvc3Rjc3M9IHJlcXVpcmUoJ2d1bHAtcG9zdGNzcycpO1xyXG5jb25zdCByZXBsYWNlPSByZXF1aXJlKCdndWxwLXJlcGxhY2UnKTtcclxuY29uc3Qgc2Fzcz0gcmVxdWlyZSgnZ3VscC1zYXNzJyk7XHJcbmNvbnN0IHNvdXJjZW1hcHM9IHJlcXVpcmUoJ2d1bHAtc291cmNlbWFwcycpO1xyXG5jb25zdCB1Z2xpZnk9IHJlcXVpcmUoJ2d1bHAtdWdsaWZ5Jyk7XHJcbmNvbnN0IGJhYmVsID0gcmVxdWlyZSgnZ3VscC1iYWJlbCcpO1xyXG5jb25zdCBicm93c2VyaWZ5ID0gcmVxdWlyZSgnZ3VscC1icm93c2VyaWZ5Jyk7XHJcbi8vRmlsZSBwYXRoIHZhcmlhYmxlc1xyXG5jb25zdCBmaWxlcz17XHJcbiAgICBzY3NzUGF0aDonYXBwL3Njc3MvKiovKi5zY3NzJyxcclxuICAgIGpzUGF0aDonYXBwL2pzLyoqLyouanMnXHJcbn1cclxuXHJcbi8vU2FzcyB0YXNrc1xyXG5mdW5jdGlvbiBzYXNzVGFzaygpe1xyXG4gICAgcmV0dXJuIHNyYyhmaWxlcy5zY3NzUGF0aClcclxuICAgIC5waXBlKHNvdXJjZW1hcHMuaW5pdCgpKVxyXG4gICAgLnBpcGUoc2FzcygpKVxyXG4gICAgLnBpcGUocG9zdGNzcyhbYXV0b3ByZWZpeGVyKCksY3NzbmFubygpXSkpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLndyaXRlKCcuJykpXHJcbiAgICAucGlwZShkZXN0KCdkaXN0JykpXHJcbn1cclxuXHJcbi8vSlMgdGFza3NcclxuZnVuY3Rpb24ganNUYXNrKCl7XHJcbiAgICByZXR1cm4gc3JjKGZpbGVzLmpzUGF0aClcclxuICAgIC5waXBlKHNvdXJjZW1hcHMuaW5pdCgpKVxyXG4gICAgLnBpcGUoYnJvd3NlcmlmeSh7IGluc2VydEdsb2JhbHMgOiB0cnVlLH0pKVxyXG4gICAgLnBpcGUoYmFiZWwoe1xyXG4gICAgICAgIHByZXNldHM6IFsnQGJhYmVsL2VudiddXHJcbiAgICB9KSlcclxuICAgIC5waXBlKGNvbmNhdCgnYWxsLmpzJykpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLndyaXRlKCcuJykpXHJcbiAgIC8vIC5waXBlKHVnbGlmeSgpKVxyXG4gICAgLnBpcGUoZGVzdCgnZGlzdCcpKVxyXG59XHJcblxyXG4vL0NhY2hlYnVyc3RpbmdcclxuY29uc3QgY2JzdHJpbmc9bmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbmZ1bmN0aW9uIGNhY2hlQnVzdFRhc2soKXtcclxuICAgIHJldHVybiBzcmMoWydpbmRleC5odG1sJ10pXHJcbiAgICAucGlwZShyZXBsYWNlKC9jYj1cXGQrL2csJ2NiPScrIGNic3RyaW5nKSkgXHJcbiAgICAucGlwZShkZXN0KCcuJykpXHJcbn1cclxuXHJcblxyXG4vL3dhdGNoIHRhc2tzXHJcbmZ1bmN0aW9uIHdhdGNoVGFzaygpe1xyXG4gICAgd2F0Y2goW2ZpbGVzLnNjc3NQYXRoLGZpbGVzLmpzUGF0aF0sXHJcbiAgICAgICAgcGFyYWxsZWwoc2Fzc1Rhc2ssanNUYXNrKSlcclxufVxyXG5cclxuLy9EZWZhdWx0IHRhc2tcclxuZXhwb3J0cy5kZWZhdWx0PXNlcmllcyhwYXJhbGxlbChzYXNzVGFzayxqc1Rhc2spLGNhY2hlQnVzdFRhc2ssd2F0Y2hUYXNrKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "src",
        "dest",
        "watch",
        "series",
        "parallel",
        "require",
        "autoprefixer",
        "cssnano",
        "concat",
        "postcss",
        "replace",
        "sass",
        "sourcemaps",
        "uglify",
        "babel",
        "browserify",
        "files",
        "scssPath",
        "jsPath",
        "sassTask",
        "pipe",
        "init",
        "write",
        "jsTask",
        "insertGlobals",
        "presets",
        "cbstring",
        "Date",
        "getTime",
        "cacheBustTask",
        "watchTask",
        "exports",
        "default"
      ],
      "mappings": ";;AAAA;AACA,MAAM;AAAEA,EAAAA,GAAF;AAAMC,EAAAA,IAAN;AAAWC,EAAAA,KAAX;AAAiBC,EAAAA,MAAjB;AAAwBC,EAAAA;AAAxB,IAAkCC,OAAO,CAAC,MAAD,CAA/C;;AACA,MAAMC,YAAY,GAAED,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAME,OAAO,GAAEF,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMG,MAAM,GAAEH,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMI,OAAO,GAAEJ,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAMK,OAAO,GAAEL,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAMM,IAAI,GAAEN,OAAO,CAAC,WAAD,CAAnB;;AACA,MAAMO,UAAU,GAAEP,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMQ,MAAM,GAAER,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMS,KAAK,GAAGT,OAAO,CAAC,YAAD,CAArB;;AACA,MAAMU,UAAU,GAAGV,OAAO,CAAC,iBAAD,CAA1B,C,CACA;;;AACA,MAAMW,KAAK,GAAC;AACRC,EAAAA,QAAQ,EAAC,oBADD;AAERC,EAAAA,MAAM,EAAC;AAFC,CAAZ,C,CAKA;;AACA,SAASC,QAAT,GAAmB;AACf,SAAOnB,GAAG,CAACgB,KAAK,CAACC,QAAP,CAAH,CACNG,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDT,IAAI,EAFH,EAGNS,IAHM,CAGDX,OAAO,CAAC,CAACH,YAAY,EAAb,EAAgBC,OAAO,EAAvB,CAAD,CAHN,EAINa,IAJM,CAIDR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAJC,EAKNF,IALM,CAKDnB,IAAI,CAAC,MAAD,CALH,CAAP;AAMH,C,CAED;;;AACA,SAASsB,MAAT,GAAiB;AACb,SAAOvB,GAAG,CAACgB,KAAK,CAACE,MAAP,CAAH,CACNE,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDL,UAAU,CAAC;AAAES,IAAAA,aAAa,EAAG;AAAlB,GAAD,CAFT,EAGNJ,IAHM,CAGDN,KAAK,CAAC;AACRW,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAD,CAHJ,EAMNL,IANM,CAMDZ,MAAM,CAAC,QAAD,CANL,EAONY,IAPM,CAODR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAPC,EAQR;AARQ,GASNF,IATM,CASDnB,IAAI,CAAC,MAAD,CATH,CAAP;AAUH,C,CAED;;;AACA,MAAMyB,QAAQ,GAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAf;;AACA,SAASC,aAAT,GAAwB;AACpB,SAAO7B,GAAG,CAAC,CAAC,YAAD,CAAD,CAAH,CACNoB,IADM,CACDV,OAAO,CAAC,SAAD,EAAW,QAAOgB,QAAlB,CADN,EAENN,IAFM,CAEDnB,IAAI,CAAC,GAAD,CAFH,CAAP;AAGH,C,CAGD;;;AACA,SAAS6B,SAAT,GAAoB;AAChB5B,EAAAA,KAAK,CAAC,CAACc,KAAK,CAACC,QAAP,EAAgBD,KAAK,CAACE,MAAtB,CAAD,EACDd,QAAQ,CAACe,QAAD,EAAUI,MAAV,CADP,CAAL;AAEH,C,CAED;;;AACAQ,OAAO,CAACC,OAAR,GAAgB7B,MAAM,CAACC,QAAQ,CAACe,QAAD,EAAUI,MAAV,CAAT,EAA2BM,aAA3B,EAAyCC,SAAzC,CAAtB",
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "sourcesContent": [
        "//Initialize Modules\r\nconst { src,dest,watch,series,parallel}=require('gulp');\r\nconst autoprefixer= require('autoprefixer');\r\nconst cssnano= require('cssnano');\r\nconst concat= require('gulp-concat');\r\nconst postcss= require('gulp-postcss');\r\nconst replace= require('gulp-replace');\r\nconst sass= require('gulp-sass');\r\nconst sourcemaps= require('gulp-sourcemaps');\r\nconst uglify= require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\nconst browserify = require('gulp-browserify');\r\n//File path variables\r\nconst files={\r\n    scssPath:'app/scss/**/*.scss',\r\n    jsPath:'app/js/**/*.js'\r\n}\r\n\r\n//Sass tasks\r\nfunction sassTask(){\r\n    return src(files.scssPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(sass())\r\n    .pipe(postcss([autoprefixer(),cssnano()]))\r\n    .pipe(sourcemaps.write('.'))\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//JS tasks\r\nfunction jsTask(){\r\n    return src(files.jsPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(browserify({ insertGlobals : true,}))\r\n    .pipe(babel({\r\n        presets: ['@babel/env']\r\n    }))\r\n    .pipe(concat('all.js'))\r\n    .pipe(sourcemaps.write('.'))\r\n   // .pipe(uglify())\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//Cachebursting\r\nconst cbstring=new Date().getTime();\r\nfunction cacheBustTask(){\r\n    return src(['index.html'])\r\n    .pipe(replace(/cb=\\d+/g,'cb='+ cbstring)) \r\n    .pipe(dest('.'))\r\n}\r\n\r\n\r\n//watch tasks\r\nfunction watchTask(){\r\n    watch([files.scssPath,files.jsPath],\r\n        parallel(sassTask,jsTask))\r\n}\r\n\r\n//Default task\r\nexports.default=series(parallel(sassTask,jsTask),cacheBustTask,watchTask)"
      ]
    },
    "sourceType": "script",
    "mtime": 1592492497579
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"filename\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "plugins": [
          "jsx",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//Initialize Modules\nvar _require = require('gulp'),\n    src = _require.src,\n    dest = _require.dest,\n    watch = _require.watch,\n    series = _require.series,\n    parallel = _require.parallel;\n\nvar autoprefixer = require('autoprefixer');\n\nvar cssnano = require('cssnano');\n\nvar concat = require('gulp-concat');\n\nvar postcss = require('gulp-postcss');\n\nvar replace = require('gulp-replace');\n\nvar sass = require('gulp-sass');\n\nvar sourcemaps = require('gulp-sourcemaps');\n\nvar uglify = require('gulp-uglify');\n\nvar babel = require('gulp-babel');\n\nvar browserify = require('gulp-browserify'); //File path variables\n\n\nvar files = {\n  scssPath: 'app/scss/**/*.scss',\n  jsPath: 'app/js/**/*.js'\n}; //Sass tasks\n\nfunction sassTask() {\n  return src(files.scssPath).pipe(sourcemaps.init()).pipe(sass()).pipe(postcss([autoprefixer(), cssnano()])).pipe(sourcemaps.write('.')).pipe(dest('dist'));\n} //JS tasks\n\n\nfunction jsTask() {\n  return src(files.jsPath).pipe(sourcemaps.init()).pipe(browserify({\n    insertGlobals: true\n  })).pipe(babel({\n    presets: ['@babel/env']\n  })).pipe(concat('all.js')).pipe(sourcemaps.write('.')) // .pipe(uglify())\n  .pipe(dest('dist'));\n} //Cachebursting\n\n\nvar cbstring = new Date().getTime();\n\nfunction cacheBustTask() {\n  return src(['index.html']).pipe(replace(/cb=\\d+/g, 'cb=' + cbstring)).pipe(dest('.'));\n} //watch tasks\n\n\nfunction watchTask() {\n  watch([files.scssPath, files.jsPath], parallel(sassTask, jsTask));\n} //Default task\n\n\nexports[\"default\"] = series(parallel(sassTask, jsTask), cacheBustTask, watchTask);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJzcmMiLCJkZXN0Iiwid2F0Y2giLCJzZXJpZXMiLCJwYXJhbGxlbCIsImF1dG9wcmVmaXhlciIsImNzc25hbm8iLCJjb25jYXQiLCJwb3N0Y3NzIiwicmVwbGFjZSIsInNhc3MiLCJzb3VyY2VtYXBzIiwidWdsaWZ5IiwiYmFiZWwiLCJicm93c2VyaWZ5IiwiZmlsZXMiLCJzY3NzUGF0aCIsImpzUGF0aCIsInNhc3NUYXNrIiwicGlwZSIsImluaXQiLCJ3cml0ZSIsImpzVGFzayIsImluc2VydEdsb2JhbHMiLCJwcmVzZXRzIiwiY2JzdHJpbmciLCJEYXRlIiwiZ2V0VGltZSIsImNhY2hlQnVzdFRhc2siLCJ3YXRjaFRhc2siLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO2VBQ3dDQSxPQUFPLENBQUMsTUFBRCxDO0lBQXZDQyxHLFlBQUFBLEc7SUFBSUMsSSxZQUFBQSxJO0lBQUtDLEssWUFBQUEsSztJQUFNQyxNLFlBQUFBLE07SUFBT0MsUSxZQUFBQSxROztBQUM5QixJQUFNQyxZQUFZLEdBQUVOLE9BQU8sQ0FBQyxjQUFELENBQTNCOztBQUNBLElBQU1PLE9BQU8sR0FBRVAsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFFUixPQUFPLENBQUMsYUFBRCxDQUFyQjs7QUFDQSxJQUFNUyxPQUFPLEdBQUVULE9BQU8sQ0FBQyxjQUFELENBQXRCOztBQUNBLElBQU1VLE9BQU8sR0FBRVYsT0FBTyxDQUFDLGNBQUQsQ0FBdEI7O0FBQ0EsSUFBTVcsSUFBSSxHQUFFWCxPQUFPLENBQUMsV0FBRCxDQUFuQjs7QUFDQSxJQUFNWSxVQUFVLEdBQUVaLE9BQU8sQ0FBQyxpQkFBRCxDQUF6Qjs7QUFDQSxJQUFNYSxNQUFNLEdBQUViLE9BQU8sQ0FBQyxhQUFELENBQXJCOztBQUNBLElBQU1jLEtBQUssR0FBR2QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBQ0EsSUFBTWUsVUFBVSxHQUFHZixPQUFPLENBQUMsaUJBQUQsQ0FBMUIsQyxDQUNBOzs7QUFDQSxJQUFNZ0IsS0FBSyxHQUFDO0FBQ1JDLEVBQUFBLFFBQVEsRUFBQyxvQkFERDtBQUVSQyxFQUFBQSxNQUFNLEVBQUM7QUFGQyxDQUFaLEMsQ0FLQTs7QUFDQSxTQUFTQyxRQUFULEdBQW1CO0FBQ2YsU0FBT2xCLEdBQUcsQ0FBQ2UsS0FBSyxDQUFDQyxRQUFQLENBQUgsQ0FDTkcsSUFETSxDQUNEUixVQUFVLENBQUNTLElBQVgsRUFEQyxFQUVORCxJQUZNLENBRURULElBQUksRUFGSCxFQUdOUyxJQUhNLENBR0RYLE9BQU8sQ0FBQyxDQUFDSCxZQUFZLEVBQWIsRUFBZ0JDLE9BQU8sRUFBdkIsQ0FBRCxDQUhOLEVBSU5hLElBSk0sQ0FJRFIsVUFBVSxDQUFDVSxLQUFYLENBQWlCLEdBQWpCLENBSkMsRUFLTkYsSUFMTSxDQUtEbEIsSUFBSSxDQUFDLE1BQUQsQ0FMSCxDQUFQO0FBTUgsQyxDQUVEOzs7QUFDQSxTQUFTcUIsTUFBVCxHQUFpQjtBQUNiLFNBQU90QixHQUFHLENBQUNlLEtBQUssQ0FBQ0UsTUFBUCxDQUFILENBQ05FLElBRE0sQ0FDRFIsVUFBVSxDQUFDUyxJQUFYLEVBREMsRUFFTkQsSUFGTSxDQUVETCxVQUFVLENBQUM7QUFBRVMsSUFBQUEsYUFBYSxFQUFHO0FBQWxCLEdBQUQsQ0FGVCxFQUdOSixJQUhNLENBR0ROLEtBQUssQ0FBQztBQUNSVyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBREQsR0FBRCxDQUhKLEVBTU5MLElBTk0sQ0FNRFosTUFBTSxDQUFDLFFBQUQsQ0FOTCxFQU9OWSxJQVBNLENBT0RSLFVBQVUsQ0FBQ1UsS0FBWCxDQUFpQixHQUFqQixDQVBDLEVBUVI7QUFSUSxHQVNORixJQVRNLENBU0RsQixJQUFJLENBQUMsTUFBRCxDQVRILENBQVA7QUFVSCxDLENBRUQ7OztBQUNBLElBQU13QixRQUFRLEdBQUMsSUFBSUMsSUFBSixHQUFXQyxPQUFYLEVBQWY7O0FBQ0EsU0FBU0MsYUFBVCxHQUF3QjtBQUNwQixTQUFPNUIsR0FBRyxDQUFDLENBQUMsWUFBRCxDQUFELENBQUgsQ0FDTm1CLElBRE0sQ0FDRFYsT0FBTyxDQUFDLFNBQUQsRUFBVyxRQUFPZ0IsUUFBbEIsQ0FETixFQUVOTixJQUZNLENBRURsQixJQUFJLENBQUMsR0FBRCxDQUZILENBQVA7QUFHSCxDLENBR0Q7OztBQUNBLFNBQVM0QixTQUFULEdBQW9CO0FBQ2hCM0IsRUFBQUEsS0FBSyxDQUFDLENBQUNhLEtBQUssQ0FBQ0MsUUFBUCxFQUFnQkQsS0FBSyxDQUFDRSxNQUF0QixDQUFELEVBQ0RiLFFBQVEsQ0FBQ2MsUUFBRCxFQUFVSSxNQUFWLENBRFAsQ0FBTDtBQUVILEMsQ0FFRDs7O0FBQ0FRLE9BQU8sV0FBUCxHQUFnQjNCLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDYyxRQUFELEVBQVVJLE1BQVYsQ0FBVCxFQUEyQk0sYUFBM0IsRUFBeUNDLFNBQXpDLENBQXRCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVmlub2RcXHdlYnBhY2tcXGd1bHBhcHBcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vSW5pdGlhbGl6ZSBNb2R1bGVzXHJcbmNvbnN0IHsgc3JjLGRlc3Qsd2F0Y2gsc2VyaWVzLHBhcmFsbGVsfT1yZXF1aXJlKCdndWxwJyk7XHJcbmNvbnN0IGF1dG9wcmVmaXhlcj0gcmVxdWlyZSgnYXV0b3ByZWZpeGVyJyk7XHJcbmNvbnN0IGNzc25hbm89IHJlcXVpcmUoJ2Nzc25hbm8nKTtcclxuY29uc3QgY29uY2F0PSByZXF1aXJlKCdndWxwLWNvbmNhdCcpO1xyXG5jb25zdCBwb3N0Y3NzPSByZXF1aXJlKCdndWxwLXBvc3Rjc3MnKTtcclxuY29uc3QgcmVwbGFjZT0gcmVxdWlyZSgnZ3VscC1yZXBsYWNlJyk7XHJcbmNvbnN0IHNhc3M9IHJlcXVpcmUoJ2d1bHAtc2FzcycpO1xyXG5jb25zdCBzb3VyY2VtYXBzPSByZXF1aXJlKCdndWxwLXNvdXJjZW1hcHMnKTtcclxuY29uc3QgdWdsaWZ5PSByZXF1aXJlKCdndWxwLXVnbGlmeScpO1xyXG5jb25zdCBiYWJlbCA9IHJlcXVpcmUoJ2d1bHAtYmFiZWwnKTtcclxuY29uc3QgYnJvd3NlcmlmeSA9IHJlcXVpcmUoJ2d1bHAtYnJvd3NlcmlmeScpO1xyXG4vL0ZpbGUgcGF0aCB2YXJpYWJsZXNcclxuY29uc3QgZmlsZXM9e1xyXG4gICAgc2Nzc1BhdGg6J2FwcC9zY3NzLyoqLyouc2NzcycsXHJcbiAgICBqc1BhdGg6J2FwcC9qcy8qKi8qLmpzJ1xyXG59XHJcblxyXG4vL1Nhc3MgdGFza3NcclxuZnVuY3Rpb24gc2Fzc1Rhc2soKXtcclxuICAgIHJldHVybiBzcmMoZmlsZXMuc2Nzc1BhdGgpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgIC5waXBlKHNhc3MoKSlcclxuICAgIC5waXBlKHBvc3Rjc3MoW2F1dG9wcmVmaXhlcigpLGNzc25hbm8oKV0pKVxyXG4gICAgLnBpcGUoc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgLnBpcGUoZGVzdCgnZGlzdCcpKVxyXG59XHJcblxyXG4vL0pTIHRhc2tzXHJcbmZ1bmN0aW9uIGpzVGFzaygpe1xyXG4gICAgcmV0dXJuIHNyYyhmaWxlcy5qc1BhdGgpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgIC5waXBlKGJyb3dzZXJpZnkoeyBpbnNlcnRHbG9iYWxzIDogdHJ1ZSx9KSlcclxuICAgIC5waXBlKGJhYmVsKHtcclxuICAgICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9lbnYnXVxyXG4gICAgfSkpXHJcbiAgICAucGlwZShjb25jYXQoJ2FsbC5qcycpKVxyXG4gICAgLnBpcGUoc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAvLyAucGlwZSh1Z2xpZnkoKSlcclxuICAgIC5waXBlKGRlc3QoJ2Rpc3QnKSlcclxufVxyXG5cclxuLy9DYWNoZWJ1cnN0aW5nXHJcbmNvbnN0IGNic3RyaW5nPW5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG5mdW5jdGlvbiBjYWNoZUJ1c3RUYXNrKCl7XHJcbiAgICByZXR1cm4gc3JjKFsnaW5kZXguaHRtbCddKVxyXG4gICAgLnBpcGUocmVwbGFjZSgvY2I9XFxkKy9nLCdjYj0nKyBjYnN0cmluZykpIFxyXG4gICAgLnBpcGUoZGVzdCgnLicpKVxyXG59XHJcblxyXG5cclxuLy93YXRjaCB0YXNrc1xyXG5mdW5jdGlvbiB3YXRjaFRhc2soKXtcclxuICAgIHdhdGNoKFtmaWxlcy5zY3NzUGF0aCxmaWxlcy5qc1BhdGhdLFxyXG4gICAgICAgIHBhcmFsbGVsKHNhc3NUYXNrLGpzVGFzaykpXHJcbn1cclxuXHJcbi8vRGVmYXVsdCB0YXNrXHJcbmV4cG9ydHMuZGVmYXVsdD1zZXJpZXMocGFyYWxsZWwoc2Fzc1Rhc2ssanNUYXNrKSxjYWNoZUJ1c3RUYXNrLHdhdGNoVGFzaykiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "require",
        "src",
        "dest",
        "watch",
        "series",
        "parallel",
        "autoprefixer",
        "cssnano",
        "concat",
        "postcss",
        "replace",
        "sass",
        "sourcemaps",
        "uglify",
        "babel",
        "browserify",
        "files",
        "scssPath",
        "jsPath",
        "sassTask",
        "pipe",
        "init",
        "write",
        "jsTask",
        "insertGlobals",
        "presets",
        "cbstring",
        "Date",
        "getTime",
        "cacheBustTask",
        "watchTask",
        "exports"
      ],
      "mappings": ";;AAAA;eACwCA,OAAO,CAAC,MAAD,C;IAAvCC,G,YAAAA,G;IAAIC,I,YAAAA,I;IAAKC,K,YAAAA,K;IAAMC,M,YAAAA,M;IAAOC,Q,YAAAA,Q;;AAC9B,IAAMC,YAAY,GAAEN,OAAO,CAAC,cAAD,CAA3B;;AACA,IAAMO,OAAO,GAAEP,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMQ,MAAM,GAAER,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMS,OAAO,GAAET,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMU,OAAO,GAAEV,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMW,IAAI,GAAEX,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAMY,UAAU,GAAEZ,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMa,MAAM,GAAEb,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMc,KAAK,GAAGd,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMe,UAAU,GAAGf,OAAO,CAAC,iBAAD,CAA1B,C,CACA;;;AACA,IAAMgB,KAAK,GAAC;AACRC,EAAAA,QAAQ,EAAC,oBADD;AAERC,EAAAA,MAAM,EAAC;AAFC,CAAZ,C,CAKA;;AACA,SAASC,QAAT,GAAmB;AACf,SAAOlB,GAAG,CAACe,KAAK,CAACC,QAAP,CAAH,CACNG,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDT,IAAI,EAFH,EAGNS,IAHM,CAGDX,OAAO,CAAC,CAACH,YAAY,EAAb,EAAgBC,OAAO,EAAvB,CAAD,CAHN,EAINa,IAJM,CAIDR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAJC,EAKNF,IALM,CAKDlB,IAAI,CAAC,MAAD,CALH,CAAP;AAMH,C,CAED;;;AACA,SAASqB,MAAT,GAAiB;AACb,SAAOtB,GAAG,CAACe,KAAK,CAACE,MAAP,CAAH,CACNE,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDL,UAAU,CAAC;AAAES,IAAAA,aAAa,EAAG;AAAlB,GAAD,CAFT,EAGNJ,IAHM,CAGDN,KAAK,CAAC;AACRW,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAD,CAHJ,EAMNL,IANM,CAMDZ,MAAM,CAAC,QAAD,CANL,EAONY,IAPM,CAODR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAPC,EAQR;AARQ,GASNF,IATM,CASDlB,IAAI,CAAC,MAAD,CATH,CAAP;AAUH,C,CAED;;;AACA,IAAMwB,QAAQ,GAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAf;;AACA,SAASC,aAAT,GAAwB;AACpB,SAAO5B,GAAG,CAAC,CAAC,YAAD,CAAD,CAAH,CACNmB,IADM,CACDV,OAAO,CAAC,SAAD,EAAW,QAAOgB,QAAlB,CADN,EAENN,IAFM,CAEDlB,IAAI,CAAC,GAAD,CAFH,CAAP;AAGH,C,CAGD;;;AACA,SAAS4B,SAAT,GAAoB;AAChB3B,EAAAA,KAAK,CAAC,CAACa,KAAK,CAACC,QAAP,EAAgBD,KAAK,CAACE,MAAtB,CAAD,EACDb,QAAQ,CAACc,QAAD,EAAUI,MAAV,CADP,CAAL;AAEH,C,CAED;;;AACAQ,OAAO,WAAP,GAAgB3B,MAAM,CAACC,QAAQ,CAACc,QAAD,EAAUI,MAAV,CAAT,EAA2BM,aAA3B,EAAyCC,SAAzC,CAAtB",
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "sourcesContent": [
        "//Initialize Modules\r\nconst { src,dest,watch,series,parallel}=require('gulp');\r\nconst autoprefixer= require('autoprefixer');\r\nconst cssnano= require('cssnano');\r\nconst concat= require('gulp-concat');\r\nconst postcss= require('gulp-postcss');\r\nconst replace= require('gulp-replace');\r\nconst sass= require('gulp-sass');\r\nconst sourcemaps= require('gulp-sourcemaps');\r\nconst uglify= require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\nconst browserify = require('gulp-browserify');\r\n//File path variables\r\nconst files={\r\n    scssPath:'app/scss/**/*.scss',\r\n    jsPath:'app/js/**/*.js'\r\n}\r\n\r\n//Sass tasks\r\nfunction sassTask(){\r\n    return src(files.scssPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(sass())\r\n    .pipe(postcss([autoprefixer(),cssnano()]))\r\n    .pipe(sourcemaps.write('.'))\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//JS tasks\r\nfunction jsTask(){\r\n    return src(files.jsPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(browserify({ insertGlobals : true,}))\r\n    .pipe(babel({\r\n        presets: ['@babel/env']\r\n    }))\r\n    .pipe(concat('all.js'))\r\n    .pipe(sourcemaps.write('.'))\r\n   // .pipe(uglify())\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//Cachebursting\r\nconst cbstring=new Date().getTime();\r\nfunction cacheBustTask(){\r\n    return src(['index.html'])\r\n    .pipe(replace(/cb=\\d+/g,'cb='+ cbstring)) \r\n    .pipe(dest('.'))\r\n}\r\n\r\n\r\n//watch tasks\r\nfunction watchTask(){\r\n    watch([files.scssPath,files.jsPath],\r\n        parallel(sassTask,jsTask))\r\n}\r\n\r\n//Default task\r\nexports.default=series(parallel(sassTask,jsTask),cacheBustTask,watchTask)"
      ]
    },
    "sourceType": "script",
    "mtime": 1592492497579
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"filename\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Vinod\\\\webpack\\\\gulpapp\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Vinod\\webpack\\gulpapp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Vinod\\webpack\\gulpapp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n//Initialize Modules\nvar _require = require('gulp'),\n    src = _require.src,\n    dest = _require.dest,\n    watch = _require.watch,\n    series = _require.series,\n    parallel = _require.parallel;\n\nvar autoprefixer = require('autoprefixer');\n\nvar cssnano = require('cssnano');\n\nvar concat = require('gulp-concat');\n\nvar postcss = require('gulp-postcss');\n\nvar replace = require('gulp-replace');\n\nvar sass = require('gulp-sass');\n\nvar sourcemaps = require('gulp-sourcemaps');\n\nvar uglify = require('gulp-uglify');\n\nvar babel = require('gulp-babel');\n\nvar browserify = require('gulp-browserify'); //File path variables\n\n\nvar files = {\n  scssPath: 'app/scss/**/*.scss',\n  jsPath: 'app/js/**/*.js'\n}; //Sass tasks\n\nfunction sassTask() {\n  return src(files.scssPath).pipe(sourcemaps.init()).pipe(sass()).pipe(postcss([autoprefixer(), cssnano()])).pipe(sourcemaps.write('.')).pipe(dest('dist'));\n} //JS tasks\n\n\nfunction jsTask() {\n  return src(files.jsPath).pipe(sourcemaps.init()).pipe(browserify({\n    insertGlobals: true\n  })).pipe(babel({\n    presets: ['@babel/env']\n  })).pipe(concat('all.js')).pipe(sourcemaps.write('.')) // .pipe(uglify())\n  .pipe(dest('dist'));\n} //Cachebursting\n\n\nvar cbstring = new Date().getTime();\n\nfunction cacheBustTask() {\n  return src(['index.html']).pipe(replace(/cb=\\d+/g, 'cb=' + cbstring)).pipe(dest('.'));\n} //watch tasks\n\n\nfunction watchTask() {\n  watch([files.scssPath, files.jsPath], parallel(sassTask, jsTask));\n} //Default task\n\n\nexports[\"default\"] = series(parallel(sassTask, jsTask), cacheBustTask, watchTask);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJzcmMiLCJkZXN0Iiwid2F0Y2giLCJzZXJpZXMiLCJwYXJhbGxlbCIsImF1dG9wcmVmaXhlciIsImNzc25hbm8iLCJjb25jYXQiLCJwb3N0Y3NzIiwicmVwbGFjZSIsInNhc3MiLCJzb3VyY2VtYXBzIiwidWdsaWZ5IiwiYmFiZWwiLCJicm93c2VyaWZ5IiwiZmlsZXMiLCJzY3NzUGF0aCIsImpzUGF0aCIsInNhc3NUYXNrIiwicGlwZSIsImluaXQiLCJ3cml0ZSIsImpzVGFzayIsImluc2VydEdsb2JhbHMiLCJwcmVzZXRzIiwiY2JzdHJpbmciLCJEYXRlIiwiZ2V0VGltZSIsImNhY2hlQnVzdFRhc2siLCJ3YXRjaFRhc2siLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO2VBQ3dDQSxPQUFPLENBQUMsTUFBRCxDO0lBQXZDQyxHLFlBQUFBLEc7SUFBSUMsSSxZQUFBQSxJO0lBQUtDLEssWUFBQUEsSztJQUFNQyxNLFlBQUFBLE07SUFBT0MsUSxZQUFBQSxROztBQUM5QixJQUFNQyxZQUFZLEdBQUVOLE9BQU8sQ0FBQyxjQUFELENBQTNCOztBQUNBLElBQU1PLE9BQU8sR0FBRVAsT0FBTyxDQUFDLFNBQUQsQ0FBdEI7O0FBQ0EsSUFBTVEsTUFBTSxHQUFFUixPQUFPLENBQUMsYUFBRCxDQUFyQjs7QUFDQSxJQUFNUyxPQUFPLEdBQUVULE9BQU8sQ0FBQyxjQUFELENBQXRCOztBQUNBLElBQU1VLE9BQU8sR0FBRVYsT0FBTyxDQUFDLGNBQUQsQ0FBdEI7O0FBQ0EsSUFBTVcsSUFBSSxHQUFFWCxPQUFPLENBQUMsV0FBRCxDQUFuQjs7QUFDQSxJQUFNWSxVQUFVLEdBQUVaLE9BQU8sQ0FBQyxpQkFBRCxDQUF6Qjs7QUFDQSxJQUFNYSxNQUFNLEdBQUViLE9BQU8sQ0FBQyxhQUFELENBQXJCOztBQUNBLElBQU1jLEtBQUssR0FBR2QsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O0FBQ0EsSUFBTWUsVUFBVSxHQUFHZixPQUFPLENBQUMsaUJBQUQsQ0FBMUIsQyxDQUNBOzs7QUFDQSxJQUFNZ0IsS0FBSyxHQUFDO0FBQ1JDLEVBQUFBLFFBQVEsRUFBQyxvQkFERDtBQUVSQyxFQUFBQSxNQUFNLEVBQUM7QUFGQyxDQUFaLEMsQ0FLQTs7QUFDQSxTQUFTQyxRQUFULEdBQW1CO0FBQ2YsU0FBT2xCLEdBQUcsQ0FBQ2UsS0FBSyxDQUFDQyxRQUFQLENBQUgsQ0FDTkcsSUFETSxDQUNEUixVQUFVLENBQUNTLElBQVgsRUFEQyxFQUVORCxJQUZNLENBRURULElBQUksRUFGSCxFQUdOUyxJQUhNLENBR0RYLE9BQU8sQ0FBQyxDQUFDSCxZQUFZLEVBQWIsRUFBZ0JDLE9BQU8sRUFBdkIsQ0FBRCxDQUhOLEVBSU5hLElBSk0sQ0FJRFIsVUFBVSxDQUFDVSxLQUFYLENBQWlCLEdBQWpCLENBSkMsRUFLTkYsSUFMTSxDQUtEbEIsSUFBSSxDQUFDLE1BQUQsQ0FMSCxDQUFQO0FBTUgsQyxDQUVEOzs7QUFDQSxTQUFTcUIsTUFBVCxHQUFpQjtBQUNiLFNBQU90QixHQUFHLENBQUNlLEtBQUssQ0FBQ0UsTUFBUCxDQUFILENBQ05FLElBRE0sQ0FDRFIsVUFBVSxDQUFDUyxJQUFYLEVBREMsRUFFTkQsSUFGTSxDQUVETCxVQUFVLENBQUM7QUFBRVMsSUFBQUEsYUFBYSxFQUFHO0FBQWxCLEdBQUQsQ0FGVCxFQUdOSixJQUhNLENBR0ROLEtBQUssQ0FBQztBQUNSVyxJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBREQsR0FBRCxDQUhKLEVBTU5MLElBTk0sQ0FNRFosTUFBTSxDQUFDLFFBQUQsQ0FOTCxFQU9OWSxJQVBNLENBT0RSLFVBQVUsQ0FBQ1UsS0FBWCxDQUFpQixHQUFqQixDQVBDLEVBUVI7QUFSUSxHQVNORixJQVRNLENBU0RsQixJQUFJLENBQUMsTUFBRCxDQVRILENBQVA7QUFVSCxDLENBRUQ7OztBQUNBLElBQU13QixRQUFRLEdBQUMsSUFBSUMsSUFBSixHQUFXQyxPQUFYLEVBQWY7O0FBQ0EsU0FBU0MsYUFBVCxHQUF3QjtBQUNwQixTQUFPNUIsR0FBRyxDQUFDLENBQUMsWUFBRCxDQUFELENBQUgsQ0FDTm1CLElBRE0sQ0FDRFYsT0FBTyxDQUFDLFNBQUQsRUFBVyxRQUFPZ0IsUUFBbEIsQ0FETixFQUVOTixJQUZNLENBRURsQixJQUFJLENBQUMsR0FBRCxDQUZILENBQVA7QUFHSCxDLENBR0Q7OztBQUNBLFNBQVM0QixTQUFULEdBQW9CO0FBQ2hCM0IsRUFBQUEsS0FBSyxDQUFDLENBQUNhLEtBQUssQ0FBQ0MsUUFBUCxFQUFnQkQsS0FBSyxDQUFDRSxNQUF0QixDQUFELEVBQ0RiLFFBQVEsQ0FBQ2MsUUFBRCxFQUFVSSxNQUFWLENBRFAsQ0FBTDtBQUVILEMsQ0FFRDs7O0FBQ0FRLE9BQU8sV0FBUCxHQUFnQjNCLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDYyxRQUFELEVBQVVJLE1BQVYsQ0FBVCxFQUEyQk0sYUFBM0IsRUFBeUNDLFNBQXpDLENBQXRCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVmlub2RcXHdlYnBhY2tcXGd1bHBhcHBcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vSW5pdGlhbGl6ZSBNb2R1bGVzXHJcbmNvbnN0IHsgc3JjLGRlc3Qsd2F0Y2gsc2VyaWVzLHBhcmFsbGVsfT1yZXF1aXJlKCdndWxwJyk7XHJcbmNvbnN0IGF1dG9wcmVmaXhlcj0gcmVxdWlyZSgnYXV0b3ByZWZpeGVyJyk7XHJcbmNvbnN0IGNzc25hbm89IHJlcXVpcmUoJ2Nzc25hbm8nKTtcclxuY29uc3QgY29uY2F0PSByZXF1aXJlKCdndWxwLWNvbmNhdCcpO1xyXG5jb25zdCBwb3N0Y3NzPSByZXF1aXJlKCdndWxwLXBvc3Rjc3MnKTtcclxuY29uc3QgcmVwbGFjZT0gcmVxdWlyZSgnZ3VscC1yZXBsYWNlJyk7XHJcbmNvbnN0IHNhc3M9IHJlcXVpcmUoJ2d1bHAtc2FzcycpO1xyXG5jb25zdCBzb3VyY2VtYXBzPSByZXF1aXJlKCdndWxwLXNvdXJjZW1hcHMnKTtcclxuY29uc3QgdWdsaWZ5PSByZXF1aXJlKCdndWxwLXVnbGlmeScpO1xyXG5jb25zdCBiYWJlbCA9IHJlcXVpcmUoJ2d1bHAtYmFiZWwnKTtcclxuY29uc3QgYnJvd3NlcmlmeSA9IHJlcXVpcmUoJ2d1bHAtYnJvd3NlcmlmeScpO1xyXG4vL0ZpbGUgcGF0aCB2YXJpYWJsZXNcclxuY29uc3QgZmlsZXM9e1xyXG4gICAgc2Nzc1BhdGg6J2FwcC9zY3NzLyoqLyouc2NzcycsXHJcbiAgICBqc1BhdGg6J2FwcC9qcy8qKi8qLmpzJ1xyXG59XHJcblxyXG4vL1Nhc3MgdGFza3NcclxuZnVuY3Rpb24gc2Fzc1Rhc2soKXtcclxuICAgIHJldHVybiBzcmMoZmlsZXMuc2Nzc1BhdGgpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgIC5waXBlKHNhc3MoKSlcclxuICAgIC5waXBlKHBvc3Rjc3MoW2F1dG9wcmVmaXhlcigpLGNzc25hbm8oKV0pKVxyXG4gICAgLnBpcGUoc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAgLnBpcGUoZGVzdCgnZGlzdCcpKVxyXG59XHJcblxyXG4vL0pTIHRhc2tzXHJcbmZ1bmN0aW9uIGpzVGFzaygpe1xyXG4gICAgcmV0dXJuIHNyYyhmaWxlcy5qc1BhdGgpXHJcbiAgICAucGlwZShzb3VyY2VtYXBzLmluaXQoKSlcclxuICAgIC5waXBlKGJyb3dzZXJpZnkoeyBpbnNlcnRHbG9iYWxzIDogdHJ1ZSx9KSlcclxuICAgIC5waXBlKGJhYmVsKHtcclxuICAgICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9lbnYnXVxyXG4gICAgfSkpXHJcbiAgICAucGlwZShjb25jYXQoJ2FsbC5qcycpKVxyXG4gICAgLnBpcGUoc291cmNlbWFwcy53cml0ZSgnLicpKVxyXG4gICAvLyAucGlwZSh1Z2xpZnkoKSlcclxuICAgIC5waXBlKGRlc3QoJ2Rpc3QnKSlcclxufVxyXG5cclxuLy9DYWNoZWJ1cnN0aW5nXHJcbmNvbnN0IGNic3RyaW5nPW5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG5mdW5jdGlvbiBjYWNoZUJ1c3RUYXNrKCl7XHJcbiAgICByZXR1cm4gc3JjKFsnaW5kZXguaHRtbCddKVxyXG4gICAgLnBpcGUocmVwbGFjZSgvY2I9XFxkKy9nLCdjYj0nKyBjYnN0cmluZykpIFxyXG4gICAgLnBpcGUoZGVzdCgnLicpKVxyXG59XHJcblxyXG5cclxuLy93YXRjaCB0YXNrc1xyXG5mdW5jdGlvbiB3YXRjaFRhc2soKXtcclxuICAgIHdhdGNoKFtmaWxlcy5zY3NzUGF0aCxmaWxlcy5qc1BhdGhdLFxyXG4gICAgICAgIHBhcmFsbGVsKHNhc3NUYXNrLGpzVGFzaykpXHJcbn1cclxuXHJcbi8vRGVmYXVsdCB0YXNrXHJcbmV4cG9ydHMuZGVmYXVsdD1zZXJpZXMocGFyYWxsZWwoc2Fzc1Rhc2ssanNUYXNrKSxjYWNoZUJ1c3RUYXNrLHdhdGNoVGFzaykiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "require",
        "src",
        "dest",
        "watch",
        "series",
        "parallel",
        "autoprefixer",
        "cssnano",
        "concat",
        "postcss",
        "replace",
        "sass",
        "sourcemaps",
        "uglify",
        "babel",
        "browserify",
        "files",
        "scssPath",
        "jsPath",
        "sassTask",
        "pipe",
        "init",
        "write",
        "jsTask",
        "insertGlobals",
        "presets",
        "cbstring",
        "Date",
        "getTime",
        "cacheBustTask",
        "watchTask",
        "exports"
      ],
      "mappings": ";;AAAA;eACwCA,OAAO,CAAC,MAAD,C;IAAvCC,G,YAAAA,G;IAAIC,I,YAAAA,I;IAAKC,K,YAAAA,K;IAAMC,M,YAAAA,M;IAAOC,Q,YAAAA,Q;;AAC9B,IAAMC,YAAY,GAAEN,OAAO,CAAC,cAAD,CAA3B;;AACA,IAAMO,OAAO,GAAEP,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAMQ,MAAM,GAAER,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMS,OAAO,GAAET,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMU,OAAO,GAAEV,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAMW,IAAI,GAAEX,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAMY,UAAU,GAAEZ,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAMa,MAAM,GAAEb,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMc,KAAK,GAAGd,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMe,UAAU,GAAGf,OAAO,CAAC,iBAAD,CAA1B,C,CACA;;;AACA,IAAMgB,KAAK,GAAC;AACRC,EAAAA,QAAQ,EAAC,oBADD;AAERC,EAAAA,MAAM,EAAC;AAFC,CAAZ,C,CAKA;;AACA,SAASC,QAAT,GAAmB;AACf,SAAOlB,GAAG,CAACe,KAAK,CAACC,QAAP,CAAH,CACNG,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDT,IAAI,EAFH,EAGNS,IAHM,CAGDX,OAAO,CAAC,CAACH,YAAY,EAAb,EAAgBC,OAAO,EAAvB,CAAD,CAHN,EAINa,IAJM,CAIDR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAJC,EAKNF,IALM,CAKDlB,IAAI,CAAC,MAAD,CALH,CAAP;AAMH,C,CAED;;;AACA,SAASqB,MAAT,GAAiB;AACb,SAAOtB,GAAG,CAACe,KAAK,CAACE,MAAP,CAAH,CACNE,IADM,CACDR,UAAU,CAACS,IAAX,EADC,EAEND,IAFM,CAEDL,UAAU,CAAC;AAAES,IAAAA,aAAa,EAAG;AAAlB,GAAD,CAFT,EAGNJ,IAHM,CAGDN,KAAK,CAAC;AACRW,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAD,CAHJ,EAMNL,IANM,CAMDZ,MAAM,CAAC,QAAD,CANL,EAONY,IAPM,CAODR,UAAU,CAACU,KAAX,CAAiB,GAAjB,CAPC,EAQR;AARQ,GASNF,IATM,CASDlB,IAAI,CAAC,MAAD,CATH,CAAP;AAUH,C,CAED;;;AACA,IAAMwB,QAAQ,GAAC,IAAIC,IAAJ,GAAWC,OAAX,EAAf;;AACA,SAASC,aAAT,GAAwB;AACpB,SAAO5B,GAAG,CAAC,CAAC,YAAD,CAAD,CAAH,CACNmB,IADM,CACDV,OAAO,CAAC,SAAD,EAAW,QAAOgB,QAAlB,CADN,EAENN,IAFM,CAEDlB,IAAI,CAAC,GAAD,CAFH,CAAP;AAGH,C,CAGD;;;AACA,SAAS4B,SAAT,GAAoB;AAChB3B,EAAAA,KAAK,CAAC,CAACa,KAAK,CAACC,QAAP,EAAgBD,KAAK,CAACE,MAAtB,CAAD,EACDb,QAAQ,CAACc,QAAD,EAAUI,MAAV,CADP,CAAL;AAEH,C,CAED;;;AACAQ,OAAO,WAAP,GAAgB3B,MAAM,CAACC,QAAQ,CAACc,QAAD,EAAUI,MAAV,CAAT,EAA2BM,aAA3B,EAAyCC,SAAzC,CAAtB",
      "sourceRoot": "C:\\Users\\Vinod\\webpack\\gulpapp\\",
      "sourcesContent": [
        "//Initialize Modules\r\nconst { src,dest,watch,series,parallel}=require('gulp');\r\nconst autoprefixer= require('autoprefixer');\r\nconst cssnano= require('cssnano');\r\nconst concat= require('gulp-concat');\r\nconst postcss= require('gulp-postcss');\r\nconst replace= require('gulp-replace');\r\nconst sass= require('gulp-sass');\r\nconst sourcemaps= require('gulp-sourcemaps');\r\nconst uglify= require('gulp-uglify');\r\nconst babel = require('gulp-babel');\r\nconst browserify = require('gulp-browserify');\r\n//File path variables\r\nconst files={\r\n    scssPath:'app/scss/**/*.scss',\r\n    jsPath:'app/js/**/*.js'\r\n}\r\n\r\n//Sass tasks\r\nfunction sassTask(){\r\n    return src(files.scssPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(sass())\r\n    .pipe(postcss([autoprefixer(),cssnano()]))\r\n    .pipe(sourcemaps.write('.'))\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//JS tasks\r\nfunction jsTask(){\r\n    return src(files.jsPath)\r\n    .pipe(sourcemaps.init())\r\n    .pipe(browserify({ insertGlobals : true,}))\r\n    .pipe(babel({\r\n        presets: ['@babel/env']\r\n    }))\r\n    .pipe(concat('all.js'))\r\n    .pipe(sourcemaps.write('.'))\r\n   // .pipe(uglify())\r\n    .pipe(dest('dist'))\r\n}\r\n\r\n//Cachebursting\r\nconst cbstring=new Date().getTime();\r\nfunction cacheBustTask(){\r\n    return src(['index.html'])\r\n    .pipe(replace(/cb=\\d+/g,'cb='+ cbstring)) \r\n    .pipe(dest('.'))\r\n}\r\n\r\n\r\n//watch tasks\r\nfunction watchTask(){\r\n    watch([files.scssPath,files.jsPath],\r\n        parallel(sassTask,jsTask))\r\n}\r\n\r\n//Default task\r\nexports.default=series(parallel(sassTask,jsTask),cacheBustTask,watchTask)"
      ]
    },
    "sourceType": "script",
    "mtime": 1592492497579
  }
}